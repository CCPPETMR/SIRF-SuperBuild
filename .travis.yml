# Language selection
# Note: with `language: cpp`, `cache: ccache` works
# but `cache: pip` and `python:` is ignored
language: cpp

# Currently commented out as set with environment flags
# Both clang and gcc can be tested. More is the better.
#compiler:
# - clang
# - gcc

# Environment variables
# Note: On trusty we need to build Armadillo ourselves (the system version is too old)
# Note: on OSX we don't seem to be able to use the system boost 1.65.1 due to a Mac-specific bug.
# Note: altering the matrix here will cause re-building of caches,
# so try to keep this concise to avoid need to update
matrix:
 include:
 - os: linux
   python: 3
   env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_Boost=ON -DUSE_SYSTEM_HDF5=ON -DUSE_SYSTEM_FFTW3=ON" CC=gcc-5 CXX=g++-5 PYMVER=3
 - os: linux
   python: 2.7
   env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_Boost=ON -DUSE_SYSTEM_SWIG=ON -DUSE_SYSTEM_HDF5=ON -DUSE_SYSTEM_FFTW3=ON -DBUILD_siemens_to_ismrmrd=ON" CC=gcc-5 CXX=g++-5 PYMVER=2
 - os: linux
   python: 3
   env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_Boost=ON -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_FFTW3=OFF -DDEVEL_BUILD=ON -DBUILD_siemens_to_ismrmrd=ON" CC=gcc-5 CXX=g++-5 PYMVER=3
 - os: linux
   python: 2.7
   env: EXTRA_BUILD_FLAGS="-DUSE_SYSTEM_Boost=ON -DUSE_SYSTEM_SWIG=OFF -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_FFTW3=OFF -DDEVEL_BUILD=ON" CC=gcc-5 CXX=g++-5 PYMVER=2
 - os: osx
   language: generic
   env: EXTRA_BUILD_FLAGS="-DSHARED_LIBS_ABS_PATH=ON -DUSE_SYSTEM_Boost=ON -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_SWIG=OFF" CC=gcc CXX=g++ PYMVER=2
 - os: osx
   language: generic
   env: EXTRA_BUILD_FLAGS="-DSHARED_LIBS_ABS_PATH=ON -DUSE_SYSTEM_Boost=OFF -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_SWIG=OFF" CC=gcc CXX=g++ PYMVER=3
 - os: osx
   language: generic
   env: EXTRA_BUILD_FLAGS="-DSHARED_LIBS_ABS_PATH=OFF -DUSE_SYSTEM_Boost=OFF -DUSE_SYSTEM_HDF5=OFF -DUSE_SYSTEM_SWIG=OFF" CC=gcc CXX=g++ PYMVER=3

env:
 global:
  - BUILD_FLAGS="-DCMAKE_BUILD_TYPE=Release"
  # don't use too many threads - may crash
  - MAKEFLAGS="-j 2"

# Ubuntu 14.04 LTS
dist: trusty

# No need for sudo
sudo: false

# Compilation dependencies
addons:
 apt:
  sources:
   - ubuntu-toolchain-r-test
  packages:
   - git-core
   - build-essential
   - g++-5
   - libboost-all-dev
   - libhdf5-serial-dev
   - libfftw3-dev
   - python-dev
   - python3-dev
   - python-tk
   - python3-tk
   - liblapack-dev
   - libxml2-dev
   - libarmadillo-dev
   - libgtest-dev
   - libplplot-dev
   - swig
   - ccache
   # not in whitelist
   - libxslt-dev
   - libace-dev
   # - root-system-bin

# cache C/C++/pip
cache:
  - ccache
  - pip

before_install:
 - mkdir -p ~/.local/bin
 - pushd ~/.local/bin
 - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [ $PYMVER == 2 ]; then
        alias python$PYMVER=/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7
        export BUILD_FLAGS="$BUILD_FLAGS -DPYTHON_EXECUTABLE=/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7"
        export BUILD_FLAGS="$BUILD_FLAGS -DPYTHON_LIBRARY=/System/Library/Frameworks/Python.framework/Versions/2.7/lib/libpython2.7.dylib"
        export BUILD_FLAGS="$BUILD_FLAGS -DPYTHON_INCLUDE_DIR=/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7"
      else
        brew install python3
        alias python$PYMVER=/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/bin/python3.6
        export BUILD_FLAGS="$BUILD_FLAGS -DPYTHON_EXECUTABLE=/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/bin/python3.6"
        export BUILD_FLAGS="$BUILD_FLAGS -DPYTHON_LIBRARY=/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/Python"
        export BUILD_FLAGS="$BUILD_FLAGS -DPYTHON_INCLUDE_DIR=/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/include/python3.6m"
      fi
      brew update
      brew tap homebrew/science
      # Note: boost is already installed on osx on travis
      # so should not be included. However, we currently need boost-python
      # brew install boost-python
      # for osx, 1.66 works but 1.65 doesn't, so update.
      brew updgrade boost
      brew install ace
      brew install swig
      brew install ccache
      # brew install scipy matplotlib
      # need curl to get more recent cmake
      brew install curl
      curl -0 https://cmake.org/files/v3.8/cmake-3.8.0-Darwin-x86_64.tar.gz -o cmake.tar.gz
      tar xzf cmake.tar.gz
      mv cmake-*/CMake.app/Contents/* cmake-*
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      curl -0 https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz -o cmake.tar.gz
      tar xzf cmake.tar.gz
    fi
 # cmake override
 - pushd cmake-*/bin
 - export PATH="$PWD:$PATH"
 - popd
 # get pip
 - curl -0 https://bootstrap.pypa.io/get-pip.py -o get-pip.py
 - python$PYMVER get-pip.py --user
 # setuptools may be out of date on osx
 - python$PYMVER -m pip install --user -U pip setuptools wheel
 # ensure python bin dir exists (and coverage dependencies installed)
 - python$PYMVER -m pip install --user -U nose codecov coveralls
 # pip path fix
 - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      # show lib/site-packages path
      python$PYMVER -m pydoc pip | grep -i -A 1 file
      python$PYMVER -m pydoc codecov | grep -i -A 1 file
      # append python bin dir to path (consult output from previous lines)
      pushd $HOME/Library/Python/$PYMVER*/bin
      export PATH="$PWD:$PATH"
      popd
    fi
 - python$PYMVER --version
 - python$PYMVER -m pip --version
 - python$PYMVER -m pip freeze
 # ccache compiler override
 - ln -s "$(which ccache)" g++
 - ln -s "$(which ccache)" g++-5
 - ln -s "$(which ccache)" gcc
 - ln -s "$(which ccache)" gcc-5
 - export PATH="$PWD:$PATH"
 - popd
 # N.B.: don't put into build matrix to allow caching.
 - export BUILD_FLAGS="$BUILD_FLAGS -DPYVER=$PYMVER"

install:
 - python$PYMVER -m pip install --user --only-binary=numpy,scipy,matplotlib numpy scipy matplotlib
 # python$PYMVER -m pip install --user nose codecov coveralls
 - cmake $BUILD_FLAGS $EXTRA_BUILD_FLAGS .
 # Job may timeout (>50min) if no ccache, otherwise should be <1min:
 - make
 - mv INSTALL/share/gadgetron/config/gadgetron.xml.example INSTALL/share/gadgetron/config/gadgetron.xml
 - source $PWD/INSTALL/bin/env_ccppetmr.sh

script:
 - ./INSTALL/bin/gadgetron >& gadgetron.log&
 # print for debugging
 - cat SIRF-prefix/src/SIRF-build/CMakeCache.txt
 - ctest -VV
 # print for debugging
 - cat SIRF-prefix/src/SIRF-build/Testing/Temporary/LastTest.log
 # may exceed 4MB travis log limit
 - cat gadgetron.log
